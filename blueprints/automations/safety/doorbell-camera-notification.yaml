blueprint:
  name: "Doorbell Camera Notification"
  description: |
    Send notifications with optional camera snapshots when doorbell is pressed.
    
    **Features:**
    - Configurable doorbell binary sensor trigger (doorbell, button, motion)
    - Optional camera integration with snapshot attachment
    - Flexible notification service selection
    - Customizable notification message and title
    - Duplicate notification prevention with cooldown period
  domain: automation
  author: "William Bartholomew"
  homeassistant:
    min_version: "2024.6.0"
  input:
    # Main Configuration Section
    main_config:
      name: "Main Configuration"
      icon: "mdi:doorbell"
      description: "Primary doorbell and camera configuration"
      input:
        doorbell_sensor:
          name: Doorbell Sensor
          description: Binary sensor that triggers when doorbell is pressed
          selector:
            entity:
              filter:
                domain: binary_sensor
        
        camera_entity:
          name: Camera (Optional)
          description: Camera to capture snapshot for notification attachment
          default: ""
          selector:
            entity:
              filter:
                domain: camera
        
        location_name:
          name: Location Name
          description: Descriptive name for the doorbell location (e.g., "Front Door", "Main Entrance")
          default: "Doorbell"
          selector:
            text:
    
    # Notification Settings Section
    notification_config:
      name: "Notification Settings"
      icon: "mdi:bell-alert"
      description: "Configure notification delivery and behavior"
      input:
        notification_service:
          name: "Notification Service"
          description: "The notification service to use for alerts"
          default: "notify.notify"
          selector:
            select:
              custom_value: true
              options:
                - "notify.notify"
                - "notify.mobile_app"
                - "notify.persistent_notification"

    # Notification Content Section
    notification_content_config:
      name: "Customize Notification Content (Optional)"
      icon: "mdi:message-text"
      description: "Customize notification titles and messages"
      collapsed: true
      input:
        notification_title:
          name: "Notification Title"
          description: "Title for doorbell notifications"
          default: "ðŸ”” Doorbell Pressed"
          selector:
            text:
        
        notification_message:
          name: "Notification Message"
          description: |
            Message template for doorbell notifications. Available variables:
            - `{location_name}`: Location/area name
          default: "ðŸ”” Someone is at the {location_name}!"
          selector:
            text:
              multiline: true
    
    # Advanced Settings Section
    advanced_settings:
      name: "Advanced Settings"
      icon: "mdi:cog"
      description: "Optional advanced notification configuration"
      collapsed: true
      input:
        cooldown_period:
          name: "Cooldown Period"
          description: "Minimum time between notifications to prevent spam"
          default:
            seconds: 30
          selector:
            duration:

variables:
  doorbell_entity: !input doorbell_sensor
  camera_entity: !input camera_entity
  location: !input location_name
  notification_title_template: !input notification_title
  notification_message_template: !input notification_message
  has_camera: "{{ camera_entity != '' and camera_entity != 'unavailable' }}"
  cooldown_seconds: !input cooldown_period

trigger:
  - platform: state
    entity_id: !input doorbell_sensor
    to: "on"

condition:
  # Prevent duplicate notifications during cooldown period
  - condition: template
    value_template: >
      {% set last_triggered = state_attr(this.entity_id, 'last_triggered') %}
      {% if last_triggered is none %}
        true
      {% else %}
        {{ (now() - last_triggered).total_seconds() > cooldown_seconds.total_seconds() }}
      {% endif %}

action:
  - choose:
      # Camera enabled - capture snapshot and send with notification
      - conditions:
          - condition: template
            value_template: "{{ has_camera }}"
        sequence:
          - service: camera.snapshot
            target:
              entity_id: !input camera_entity
            data:
              filename: "/tmp/doorbell_snapshot_{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"
            continue_on_error: true
          
          - service: !input notification_service
            data:
              title: "{{ notification_title_template }}"
              message: >
                {{ notification_message_template.replace('{location_name}', location) }}
              data:
                image: "/tmp/doorbell_snapshot_{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"
                priority: high
                ttl: 0
                actions:
                  - action: "view_camera"
                    title: "View Camera"
                  - action: "dismiss"
                    title: "Dismiss"
    
    # No camera - send text notification only
    default:
      - service: !input notification_service
        data:
          title: "{{ notification_title_template }}"
          message: >
            {{ notification_message_template.replace('{location_name}', location) }}
          data:
            priority: high
            ttl: 0
            actions:
              - action: "acknowledge"
                title: "Acknowledge"
              - action: "dismiss"
                title: "Dismiss"

# Use single mode with cooldown to prevent multiple simultaneous triggers
mode: single
max_exceeded: silent