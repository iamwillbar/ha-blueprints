blueprint:
  name: "Apollo AIR-1 Air Quality Monitor"
  description: |
    Comprehensive air quality monitoring and alerting for Apollo AIR-1 sensor with intelligent threat detection.
    
    **Features:**
    - Critical CO alerts with repeated notifications until resolved
    - Standard air quality monitoring (CO2, PM2.5, VOC) with configurable reminders
    - Optional MiCS-4514 gas sensor support
    - Configurable thresholds based on EPA/WHO guidelines
    - Separate notification services for critical vs standard alerts
    - Customizable notification messages and reminder intervals
    - Optional resolution notifications
    
    **Critical Alerts (repeated every 5 minutes by default):**
    - Carbon Monoxide (CO) - potentially life-threatening
    
    **Standard Alerts (hourly reminders by default):**
    - CO2 levels above 1000 ppm (poor ventilation)
    - PM2.5 levels above 35 µg/m³ (unhealthy air)
    - SEN55 VOC above 250 (poor air quality)
    - High ammonia, ethanol, methane, hydrogen, NO2 levels
    
    **Requirements:**
    - Apollo AIR-1 sensor connected via ESPHome
    - Notification service configured in Home Assistant
    
    **Usage Notes:**
    - Thresholds based on EPA, WHO, and ASHRAE guidelines
    - MiCS sensor readings may be less reliable than primary sensors
    - Critical CO alerts will repeat until levels normalize
    - Standard alerts can be configured with reminders or single notifications
  domain: automation
  author: "William Bartholomew"
  homeassistant:
    min_version: "2024.6.0"
  input:
    # Main Configuration Section
    main_config:
      name: "Main Configuration"
      icon: "mdi:air-filter"
      description: "Primary air quality sensor configuration"
      input:
        co2_sensor:
          name: CO2 Sensor
          description: Select your Apollo AIR-1 CO2 sensor
          selector:
            entity:
              filter:
                - integration: esphome
                  device_class: carbon_dioxide
              multiple: false
        
        co_sensor:
          name: Carbon Monoxide Sensor
          description: Select your Apollo AIR-1 CO sensor
          selector:
            entity:
              filter:
                - integration: esphome
                  device_class: carbon_monoxide
              multiple: false
        
        pm25_sensor:
          name: PM2.5 Sensor
          description: Select your Apollo AIR-1 PM2.5 sensor
          selector:
            entity:
              filter:
                - integration: esphome
                  device_class: pm25
              multiple: false
        
        voc_sensor:
          name: VOC Sensor
          description: Select your Apollo AIR-1 VOC sensor
          selector:
            entity:
              filter:
                - integration: esphome
              multiple: false
        
        device_location:
          name: Device Location Name
          description: Descriptive name for the sensor location (e.g., 'Living Room', 'Basement')
          default: "Home"
          selector:
            text:
        
        # Optional MiCS Gas Sensors
        ammonia_sensor:
          name: Ammonia Sensor (Optional)
          description: Optional MiCS-4514 ammonia sensor if installed
          default: ""
          selector:
            entity:
              filter:
                - integration: esphome
              multiple: false
        
        ethanol_sensor:
          name: Ethanol Sensor (Optional)
          description: Optional MiCS-4514 ethanol sensor if installed
          default: ""
          selector:
            entity:
              filter:
                - integration: esphome
              multiple: false
        
        methane_sensor:
          name: Methane Sensor (Optional)
          description: Optional MiCS-4514 methane sensor if installed
          default: ""
          selector:
            entity:
              filter:
                - integration: esphome
              multiple: false
        
        hydrogen_sensor:
          name: Hydrogen Sensor (Optional)
          description: Optional MiCS-4514 hydrogen sensor if installed
          default: ""
          selector:
            entity:
              filter:
                - integration: esphome
              multiple: false
        
        nitrogen_dioxide_sensor:
          name: Nitrogen Dioxide Sensor (Optional)
          description: Optional MiCS-4514 NO2 sensor if installed
          default: ""
          selector:
            entity:
              filter:
                - integration: esphome
              multiple: false
    
    # Threshold Configuration Section
    threshold_config:
      name: "Threshold Configuration"
      icon: "mdi:tune"
      description: "Customize alert thresholds based on your environment"
      input:
        co2_threshold:
          name: CO2 Alert Threshold
          description: "CO2 level that triggers poor ventilation alerts (EPA: 1000ppm)"
          default: 1000
          selector:
            number:
              min: 400
              max: 5000
              step: 50
              unit_of_measurement: "ppm"
        
        co2_clear_threshold:
          name: CO2 Clear Threshold
          description: "CO2 level below which alerts are considered resolved"
          default: 800
          selector:
            number:
              min: 400
              max: 2000
              step: 50
              unit_of_measurement: "ppm"
        
        pm25_threshold:
          name: PM2.5 Alert Threshold
          description: "PM2.5 level that triggers air quality alerts (EPA: 35µg/m³)"
          default: 35
          selector:
            number:
              min: 10
              max: 100
              step: 5
              unit_of_measurement: "µg/m³"
        
        pm25_clear_threshold:
          name: PM2.5 Clear Threshold
          description: "PM2.5 level below which alerts are considered resolved"
          default: 25
          selector:
            number:
              min: 5
              max: 50
              step: 5
              unit_of_measurement: "µg/m³"
        
        voc_threshold:
          name: VOC Alert Threshold
          description: "VOC index level that triggers air quality alerts"
          default: 250
          selector:
            number:
              min: 100
              max: 500
              step: 25
        
        voc_clear_threshold:
          name: VOC Clear Threshold
          description: "VOC index level below which alerts are considered resolved"
          default: 200
          selector:
            number:
              min: 50
              max: 300
              step: 25
        
        co_warning_threshold:
          name: CO Warning Threshold
          description: "CO level for warning alerts (OSHA: 35ppm)"
          default: 35
          selector:
            number:
              min: 10
              max: 100
              step: 5
              unit_of_measurement: "ppm"
        
        co_critical_threshold:
          name: CO Critical Threshold
          description: "CO level for critical alerts (OSHA: 200ppm)"
          default: 200
          selector:
            number:
              min: 50
              max: 500
              step: 10
              unit_of_measurement: "ppm"
        
        co_clear_threshold:
          name: CO Clear Threshold
          description: "CO level below which alerts are considered resolved"
          default: 10
          selector:
            number:
              min: 5
              max: 50
              step: 5
              unit_of_measurement: "ppm"
        
        # MiCS sensor thresholds
        ammonia_threshold:
          name: Ammonia Alert Threshold
          description: "Ammonia level that triggers alerts"
          default: 25
          selector:
            number:
              min: 5
              max: 100
              step: 5
              unit_of_measurement: "ppm"
        
        ethanol_threshold:
          name: Ethanol Alert Threshold
          description: "Ethanol level that triggers alerts"
          default: 1000
          selector:
            number:
              min: 100
              max: 5000
              step: 100
              unit_of_measurement: "ppm"
        
        methane_threshold:
          name: Methane Alert Threshold
          description: "Methane level that triggers alerts"
          default: 1000
          selector:
            number:
              min: 100
              max: 5000
              step: 100
              unit_of_measurement: "ppm"
        
        hydrogen_threshold:
          name: Hydrogen Alert Threshold
          description: "Hydrogen level that triggers alerts"
          default: 1000
          selector:
            number:
              min: 100
              max: 5000
              step: 100
              unit_of_measurement: "ppm"
        
        nitrogen_dioxide_threshold:
          name: Nitrogen Dioxide Alert Threshold
          description: "NO2 level that triggers alerts"
          default: 0.5
          selector:
            number:
              min: 0.1
              max: 5
              step: 0.1
              unit_of_measurement: "ppm"

    # Notification Settings Section
    notification_config:
      name: "Notification Settings"
      icon: "mdi:bell-alert"
      description: "Configure notification delivery and timing"
      input:
        notification_service:
          name: "Standard Notification Service"
          description: "Notification service for standard air quality alerts"
          default: "notify.notify"
          selector:
            select:
              custom_value: true
              options:
                - "notify.notify"
                - "notify.mobile_app"
                - "notify.persistent_notification"
        
        critical_notification_service:
          name: "Critical Notification Service (Optional)"
          description: "Separate notification service for critical CO alerts. Leave empty to use standard service."
          default: ""
          selector:
            select:
              custom_value: true
              options:
                - "notify.notify"
                - "notify.mobile_app"
                - "notify.persistent_notification"
        
        standard_reminder_interval:
          name: "Standard Alert Reminder Interval"
          description: "How often to repeat standard air quality alerts (0 = no reminders)"
          default: 60
          selector:
            number:
              min: 0
              max: 480
              step: 15
              unit_of_measurement: "minutes"
              mode: slider
        
        critical_reminder_interval:
          name: "Critical Alert Reminder Interval"
          description: "How often to repeat critical CO alerts"
          default: 5
          selector:
            number:
              min: 1
              max: 30
              step: 1
              unit_of_measurement: "minutes"
              mode: slider
        
        send_resolution_notifications:
          name: "Send Resolution Notifications"
          description: "Send notifications when air quality returns to normal (not for critical CO alerts)"
          default: true
          selector:
            boolean:

    # Notification Content Section
    notification_content_config:
      name: "Customize Notification Content (Optional)"
      icon: "mdi:message-text"
      description: "Customize notification titles and messages"
      collapsed: true
      input:
        # Standard alert titles and messages
        co2_alert_title:
          name: "CO2 Alert Title"
          description: "Title for CO2 alerts. Use {device_area} for location."
          default: "💨 Poor Ventilation Alert"
          selector:
            text:
        
        co2_alert_message:
          name: "CO2 Alert Message"
          description: "Message for CO2 alerts. Use {device_area} for location, {co2_level} for current level, {co2_limit} for threshold."
          default: "CO2 levels are high in {device_area} ({co2_level} ppm, threshold: {co2_limit} ppm). Consider improving ventilation."
          selector:
            text:
              multiline: true
        
        pm25_alert_title:
          name: "PM2.5 Alert Title"
          description: "Title for PM2.5 alerts. Use {device_area} for location."
          default: "🌫️ Air Quality Alert"
          selector:
            text:
        
        pm25_alert_message:
          name: "PM2.5 Alert Message"
          description: "Message for PM2.5 alerts. Use {device_area} for location, {pm25_level} for current level, {pm25_limit} for threshold."
          default: "PM2.5 levels are unhealthy in {device_area} ({pm25_level} µg/m³, threshold: {pm25_limit} µg/m³). Air quality is poor."
          selector:
            text:
              multiline: true
        
        voc_alert_title:
          name: "VOC Alert Title"
          description: "Title for VOC alerts. Use {device_area} for location."
          default: "🫧 VOC Alert"
          selector:
            text:
        
        voc_alert_message:
          name: "VOC Alert Message"
          description: "Message for VOC alerts. Use {device_area} for location, {voc_level} for current level, {voc_limit} for threshold."
          default: "VOC levels are elevated in {device_area} (index: {voc_level}, threshold: {voc_limit}). Poor air quality detected."
          selector:
            text:
              multiline: true
        
        # Critical CO alert titles and messages
        co_warning_title:
          name: "CO Warning Title"
          description: "Title for CO warning alerts. Use {device_area} for location."
          default: "⚠️ Carbon Monoxide Warning"
          selector:
            text:
        
        co_warning_message:
          name: "CO Warning Message"
          description: "Message for CO warning alerts. Use {device_area} for location, {co_level} for current level, {co_warning_limit} for threshold."
          default: "⚠️ Carbon monoxide detected in {device_area} ({co_level} ppm, warning threshold: {co_warning_limit} ppm). Monitor levels closely."
          selector:
            text:
              multiline: true
        
        co_critical_title:
          name: "CO Critical Title"
          description: "Title for critical CO alerts. Use {device_area} for location."
          default: "🚨 CRITICAL: Carbon Monoxide"
          selector:
            text:
        
        co_critical_message:
          name: "CO Critical Message"
          description: "Message for critical CO alerts. Use {device_area} for location, {co_level} for current level, {co_critical_limit} for threshold."
          default: "🚨 CRITICAL: Dangerous carbon monoxide levels in {device_area} ({co_level} ppm, critical threshold: {co_critical_limit} ppm). Evacuate immediately and ventilate!"
          selector:
            text:
              multiline: true

variables:
  co2_entity: !input co2_sensor
  co_entity: !input co_sensor
  pm25_entity: !input pm25_sensor
  voc_entity: !input voc_sensor
  ammonia_entity: !input ammonia_sensor
  ethanol_entity: !input ethanol_sensor
  methane_entity: !input methane_sensor
  hydrogen_entity: !input hydrogen_sensor
  nitrogen_dioxide_entity: !input nitrogen_dioxide_sensor
  notification_service: !input notification_service
  critical_notification_service: !input critical_notification_service
  effective_critical_service: "{{ critical_notification_service if critical_notification_service != '' else notification_service }}"
  device_area: !input device_location
  co2_limit: !input co2_threshold
  co2_clear: !input co2_clear_threshold
  pm25_limit: !input pm25_threshold
  pm25_clear: !input pm25_clear_threshold
  voc_limit: !input voc_threshold
  voc_clear: !input voc_clear_threshold
  co_warning_limit: !input co_warning_threshold
  co_critical_limit: !input co_critical_threshold
  co_clear_limit: !input co_clear_threshold
  ammonia_limit: !input ammonia_threshold
  ethanol_limit: !input ethanol_threshold
  methane_limit: !input methane_threshold
  hydrogen_limit: !input hydrogen_threshold
  nitrogen_dioxide_limit: !input nitrogen_dioxide_threshold
  standard_reminder_interval: !input standard_reminder_interval
  critical_reminder_interval: !input critical_reminder_interval
  send_resolution_notifications: !input send_resolution_notifications
  # Message templates
  co2_alert_title_template: !input co2_alert_title
  co2_alert_message_template: !input co2_alert_message
  pm25_alert_title_template: !input pm25_alert_title
  pm25_alert_message_template: !input pm25_alert_message
  voc_alert_title_template: !input voc_alert_title
  voc_alert_message_template: !input voc_alert_message
  co_warning_title_template: !input co_warning_title
  co_warning_message_template: !input co_warning_message
  co_critical_title_template: !input co_critical_title
  co_critical_message_template: !input co_critical_message

mode: parallel
max_exceeded: silent

trigger:
  # CO2 monitoring
  - platform: numeric_state
    entity_id: !input co2_sensor
    above: !input co2_threshold
    id: co2_high
  
  - platform: numeric_state
    entity_id: !input co2_sensor
    below: !input co2_clear_threshold
    id: co2_normal
  
  # PM2.5 monitoring
  - platform: numeric_state
    entity_id: !input pm25_sensor
    above: !input pm25_threshold
    id: pm25_high
  
  - platform: numeric_state
    entity_id: !input pm25_sensor
    below: !input pm25_clear_threshold
    id: pm25_normal
  
  # VOC monitoring
  - platform: numeric_state
    entity_id: !input voc_sensor
    above: !input voc_threshold
    id: voc_high
  
  - platform: numeric_state
    entity_id: !input voc_sensor
    below: !input voc_clear_threshold
    id: voc_normal
  
  # Critical CO monitoring - warning level
  - platform: numeric_state
    entity_id: !input co_sensor
    above: !input co_warning_threshold
    below: !input co_critical_threshold
    id: co_warning
  
  # Critical CO monitoring - critical level
  - platform: numeric_state
    entity_id: !input co_sensor
    above: !input co_critical_threshold  
    id: co_critical
  
  # CO back to normal
  - platform: numeric_state
    entity_id: !input co_sensor
    below: !input co_clear_threshold
    id: co_normal
  
  # Additional gas sensors (if MiCS-4514 sensor is present)
  - platform: numeric_state
    entity_id: !input ammonia_sensor
    above: !input ammonia_threshold
    id: ammonia_high
  
  - platform: numeric_state
    entity_id: !input ethanol_sensor
    above: !input ethanol_threshold
    id: ethanol_high
  
  - platform: numeric_state
    entity_id: !input methane_sensor
    above: !input methane_threshold
    id: methane_high
  
  - platform: numeric_state
    entity_id: !input hydrogen_sensor
    above: !input hydrogen_threshold
    id: hydrogen_high
  
  - platform: numeric_state
    entity_id: !input nitrogen_dioxide_sensor
    above: !input nitrogen_dioxide_threshold
    id: nitrogen_dioxide_high
  
  # Repeat critical CO alerts
  - platform: time_pattern
    minutes: !input critical_reminder_interval
    id: co_repeat_check
  
  # Repeat standard alerts (if enabled)
  - platform: time_pattern
    minutes: !input standard_reminder_interval
    id: standard_repeat_check

condition: []

action:
  - choose:
      # === CRITICAL CO ALERTS ===
      - conditions:
          - condition: trigger
            id: co_critical
        sequence:
          - service: "{{ effective_critical_service }}"
            data:
              title: >
                {{ co_critical_title_template.replace('{device_area}', device_area) }}
              message: >
                {{ co_critical_message_template.replace('{device_area}', device_area).replace('{co_level}', states(co_entity)).replace('{co_critical_limit}', co_critical_limit | string) }}
                
      - conditions:
          - condition: trigger
            id: co_warning  
        sequence:
          - service: "{{ effective_critical_service }}"
            data:
              title: >
                {{ co_warning_title_template.replace('{device_area}', device_area) }}
              message: >
                {{ co_warning_message_template.replace('{device_area}', device_area).replace('{co_level}', states(co_entity)).replace('{co_warning_limit}', co_warning_limit | string) }}
                
      - conditions:
          - condition: trigger
            id: co_normal
        sequence:
          - service: "{{ effective_critical_service }}"
            data:
              title: "✅ Carbon Monoxide Safe"
              message: "Carbon monoxide levels have returned to safe levels in {{ device_area }} ({{ states(co_entity) }} ppm). All clear."
                
      # === REPEATED CO CRITICAL ALERTS ===
      - conditions:
          - condition: trigger
            id: co_repeat_check
          - condition: template
            value_template: "{{ states(co_entity) | float(0) >= co_critical_limit }}"
        sequence:
          - service: "{{ effective_critical_service }}"
            data:
              title: >
                {{ co_critical_title_template.replace('{device_area}', device_area) }}
              message: >
                {{ co_critical_message_template.replace('{device_area}', device_area).replace('{co_level}', states(co_entity)).replace('{co_critical_limit}', co_critical_limit | string) }}

      # === STANDARD AIR QUALITY ALERTS ===  
      - conditions:
          - condition: trigger
            id: co2_high
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: >
                {{ co2_alert_title_template.replace('{device_area}', device_area) }}
              message: >
                {{ co2_alert_message_template.replace('{device_area}', device_area).replace('{co2_level}', states(co2_entity)).replace('{co2_limit}', co2_limit | string) }}
                
      - conditions:
          - condition: trigger
            id: co2_normal
          - condition: template
            value_template: "{{ send_resolution_notifications }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "✅ Ventilation Normal"
              message: "CO2 levels have returned to normal in {{ device_area }} ({{ states(co2_entity) }} ppm)."
                
      - conditions:
          - condition: trigger
            id: pm25_high
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: >
                {{ pm25_alert_title_template.replace('{device_area}', device_area) }}
              message: >
                {{ pm25_alert_message_template.replace('{device_area}', device_area).replace('{pm25_level}', states(pm25_entity)).replace('{pm25_limit}', pm25_limit | string) }}
                
      - conditions:
          - condition: trigger
            id: pm25_normal
          - condition: template
            value_template: "{{ send_resolution_notifications }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "✅ Air Quality Normal"
              message: "PM2.5 levels have returned to normal in {{ device_area }} ({{ states(pm25_entity) }} µg/m³)."
                
      - conditions:
          - condition: trigger
            id: voc_high
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: >
                {{ voc_alert_title_template.replace('{device_area}', device_area) }}
              message: >
                {{ voc_alert_message_template.replace('{device_area}', device_area).replace('{voc_level}', states(voc_entity)).replace('{voc_limit}', voc_limit | string) }}
                
      - conditions:
          - condition: trigger
            id: voc_normal
          - condition: template
            value_template: "{{ send_resolution_notifications }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "✅ VOC Normal"
              message: "VOC levels have returned to normal in {{ device_area }} (index: {{ states(voc_entity) }})."
      
      # === STANDARD ALERT REMINDERS ===
      - conditions:
          - condition: trigger
            id: standard_repeat_check
          - condition: template
            value_template: "{{ standard_reminder_interval > 0 }}"
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ states(co2_entity) | float(0) >= co2_limit }}"
              - condition: template
                value_template: "{{ states(pm25_entity) | float(0) >= pm25_limit }}"
              - condition: template
                value_template: "{{ states(voc_entity) | float(0) >= voc_limit }}"
        sequence:
          # Send reminders for active alerts
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ states(co2_entity) | float(0) >= co2_limit }}"
                sequence:
                  - service: "{{ notification_service }}"
                    data:
                      title: "🔄 {{ co2_alert_title_template.replace('{device_area}', device_area) }}"
                      message: >
                        {{ co2_alert_message_template.replace('{device_area}', device_area).replace('{co2_level}', states(co2_entity)).replace('{co2_limit}', co2_limit | string) }}
              
              - conditions:
                  - condition: template
                    value_template: "{{ states(pm25_entity) | float(0) >= pm25_limit }}"
                sequence:
                  - service: "{{ notification_service }}"
                    data:
                      title: "🔄 {{ pm25_alert_title_template.replace('{device_area}', device_area) }}"
                      message: >
                        {{ pm25_alert_message_template.replace('{device_area}', device_area).replace('{pm25_level}', states(pm25_entity)).replace('{pm25_limit}', pm25_limit | string) }}
              
              - conditions:
                  - condition: template
                    value_template: "{{ states(voc_entity) | float(0) >= voc_limit }}"
                sequence:
                  - service: "{{ notification_service }}"
                    data:
                      title: "🔄 {{ voc_alert_title_template.replace('{device_area}', device_area) }}"
                      message: >
                        {{ voc_alert_message_template.replace('{device_area}', device_area).replace('{voc_level}', states(voc_entity)).replace('{voc_limit}', voc_limit | string) }}
                
      # === ADDITIONAL GAS ALERTS (if MiCS sensor present) ===
      - conditions:
          - condition: trigger
            id: ammonia_high
          - condition: template
            value_template: "{{ ammonia_entity != '' and ammonia_entity != 'unavailable' }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "🧪 Ammonia Alert - {{ device_area }}"
              message: >
                High ammonia levels detected in {{ device_area }}: {{ states(ammonia_entity) | round(2) }}ppm (threshold: {{ ammonia_limit }}ppm)
                
      - conditions:
          - condition: trigger
            id: ethanol_high
          - condition: template
            value_template: "{{ ethanol_entity != '' and ethanol_entity != 'unavailable' }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "🍷 Ethanol Alert - {{ device_area }}"
              message: >
                High ethanol levels detected in {{ device_area }}: {{ states(ethanol_entity) | round(2) }}ppm (threshold: {{ ethanol_limit }}ppm)
                
      - conditions:
          - condition: trigger
            id: methane_high
          - condition: template
            value_template: "{{ methane_entity != '' and methane_entity != 'unavailable' }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "🔥 Methane Alert - {{ device_area }}"
              message: >
                High methane levels detected in {{ device_area }}: {{ states(methane_entity) | round(2) }}ppm (threshold: {{ methane_limit }}ppm)
                
      - conditions:
          - condition: trigger
            id: hydrogen_high
          - condition: template
            value_template: "{{ hydrogen_entity != '' and hydrogen_entity != 'unavailable' }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "⚡ Hydrogen Alert - {{ device_area }}"
              message: >
                High hydrogen levels detected in {{ device_area }}: {{ states(hydrogen_entity) | round(2) }}ppm (threshold: {{ hydrogen_limit }}ppm)
                
      - conditions:
          - condition: trigger
            id: nitrogen_dioxide_high
          - condition: template
            value_template: "{{ nitrogen_dioxide_entity != '' and nitrogen_dioxide_entity != 'unavailable' }}"
        sequence:
          - service: "{{ notification_service }}"
            data:
              title: "💨 NO2 Alert - {{ device_area }}"
              message: >
                High nitrogen dioxide levels detected in {{ device_area }}: {{ states(nitrogen_dioxide_entity) | round(2) }}ppm (threshold: {{ nitrogen_dioxide_limit }}ppm)
