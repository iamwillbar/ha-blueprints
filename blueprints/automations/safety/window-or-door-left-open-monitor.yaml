blueprint:
  name: "Window or Door Left Open Monitor"
  description: |
    Monitor windows and doors for being left open too long and send customizable notifications with reminders.
    
    **Features:**
    - Supports multiple door and window sensors
    - Configurable initial delay and reminder intervals
    - Customizable notification messages with placeholders
    - Optional resolution notifications when closed
    - Parallel execution for multiple openings
    - Configurable maximum reminder count
  domain: automation
  author: "William Bartholomew"
  homeassistant:
    min_version: "2024.6.0"
  input:
    # Main Configuration Section
    main_config:
      name: "Main Configuration"
      icon: "mdi:door-open"
      description: "Primary settings for monitoring doors and windows"
      input:
        door_sensors:
          name: "Door/Window Sensors"
          description: "Select the door and window sensors to monitor for being left open"
          selector:
            entity:
              multiple: true
              filter:
                domain: binary_sensor
                device_class: 
                  - door
                  - window
        
    # Notification Settings Section
    notification_config:
      name: "Notification Settings"
      icon: "mdi:bell-alert"
      description: "Configure notification delivery and behavior"
      input:
        notification_service:
          name: "Notification Service"
          description: "Select the notification service to send alerts to"
          default: "notify.notify"
          selector:
            select:
              custom_value: true
              options:
                - "notify.notify"
                - "notify.mobile_app"
                - "notify.persistent_notification"
        
        initial_notification_delay:
          name: "Initial Notification Delay"
          description: "Time to wait before sending the first notification"
          default: 5
          selector:
            number:
              min: 0
              max: 60
              unit_of_measurement: "minutes"
              mode: slider
        
        send_reminders:
          name: "Send Reminder Notifications"
          description: "Send periodic reminder notifications if door/window is still open"
          default: true
          selector:
            boolean:
        
        reminder_interval:
          name: "Reminder Interval"
          description: "Time between reminder notifications"
          default: 10
          selector:
            number:
              min: 1
              max: 60
              unit_of_measurement: "minutes"
              mode: slider
        
        max_reminder_count:
          name: "Maximum Reminder Count"
          description: "Maximum number of reminder notifications (0 = unlimited)"
          default: 3
          selector:
            number:
              min: 0
              max: 20
              mode: box
        
        send_resolution_notification:
          name: "Send Resolution Notification"
          description: "Send a notification when the door/window is finally closed"
          default: true
          selector:
            boolean:

    # Notification Content Section
    notification_content_config:
      name: "Customize Notification Content (Optional)"
      icon: "mdi:message-text"
      description: "Customize notification titles and messages"
      collapsed: true
      input:
        notification_title:
          name: "Notification Title"
          description: "Title for the notifications"
          default: "🚪 Door/Window Alert"
          selector:
            text:
        
        notification_message:
          name: "Initial Notification Message"
          description: |
            Custom message template for the first notification. Available variables:
            - `{door_name}`: Name of the door/window sensor
            - `{time}`: Time the door/window has been open
          default: "🚪 {door_name} has been open for {time} minutes"
          selector:
            text:
              multiline: true
        
        reminder_title:
          name: "Reminder Title"
          description: "Title for reminder notifications"
          default: "🔄 Door/Window Still Open"
          selector:
            text:
        
        reminder_message:
          name: "Reminder Message"
          description: |
            Custom message template for reminder notifications. Available variables:
            - `{door_name}`: Name of the door/window sensor
            - `{time}`: Total time the door/window has been open
          default: "⚠️ {door_name} is still open after {time} minutes"
          selector:
            text:
              multiline: true
        
        resolution_title:
          name: "Resolution Title"
          description: "Title for resolution notifications"
          default: "✅ Door/Window Closed"
          selector:
            text:
        
        resolution_message:
          name: "Resolution Message"
          description: |
            Custom message template when door/window is closed. Available variables:
            - `{door_name}`: Name of the door/window sensor
            - `{time}`: Total time the door/window was open
          default: "✅ {door_name} has been closed (was open for {time} minutes)"
          selector:
            text:
              multiline: true

mode: parallel
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input door_sensors
    to: "on"

variables:
  door_sensors: !input door_sensors
  initial_notification_delay: !input initial_notification_delay
  send_reminders: !input send_reminders
  reminder_interval: !input reminder_interval
  max_reminder_count: !input max_reminder_count
  notification_service: !input notification_service
  notification_title: !input notification_title
  notification_message: !input notification_message
  reminder_title: !input reminder_title
  reminder_message: !input reminder_message
  resolution_title: !input resolution_title
  resolution_message: !input resolution_message
  send_resolution_notification: !input send_resolution_notification
  triggered_door: "{{ trigger.entity_id }}"
  door_name: "{{ state_attr(triggered_door, 'friendly_name') or triggered_door }}"

action:
  # Wait for the configured initial delay before first notification
  - alias: "Wait for initial delay"
    delay:
      minutes: "{{ initial_notification_delay }}"
  
  # Verify the door/window is still open before proceeding
  - alias: "Check if door is still open"
    condition:
      - condition: template
        value_template: "{{ is_state(triggered_door, 'on') }}"
  
  # Send the initial notification
  - alias: "Send initial notification"
    service: "{{ notification_service }}"
    data:
      title: "{{ notification_title }}"
      message: >
        {{ notification_message.replace('{door_name}', door_name).replace('{time}', initial_notification_delay | string) }}
  
  # Send periodic reminder notifications if enabled
  - alias: "Send reminder notifications"
    if:
      - condition: template
        value_template: "{{ send_reminders }}"
    then:
      - repeat:
          while:
            # Continue while door is open and under max reminder limit
            - condition: template
              value_template: "{{ is_state(triggered_door, 'on') }}"
            - condition: template
              value_template: "{{ max_reminder_count == 0 or repeat.index <= max_reminder_count }}"
          sequence:
            - alias: "Wait for reminder interval"
              delay:
                minutes: "{{ reminder_interval }}"
            
            # Double-check door is still open before sending reminder
            - alias: "Check if door is still open before sending reminder"
              condition:
                - condition: template
                  value_template: "{{ is_state(triggered_door, 'on') }}"
            
            # Calculate total time the door has been open
            - alias: "Calculate total time open"
              variables:
                total_time_open: "{{ initial_notification_delay + (repeat.index * reminder_interval) }}"
            
            - alias: "Send reminder notification"
              service: "{{ notification_service }}"
              data:
                title: "{{ reminder_title }}"
                message: >
                  {{ reminder_message.replace('{door_name}', door_name).replace('{time}', total_time_open | string) }}
  
  # Optional: Wait for door to close and send resolution notification
  - alias: "Wait for door to close and send resolution notification"
    if:
      - condition: template
        value_template: "{{ send_resolution_notification }}"
    then:
      # Wait up to 24 hours for the door to close
      - alias: "Wait for door to close"
        wait_template: "{{ is_state(triggered_door, 'off') }}"
        timeout:
          hours: 24
      
      # Send resolution notification if door was closed within timeout
      - alias: "Send resolution notification if door was closed"
        if:
          - condition: template
            value_template: "{{ wait.completed }}"
        then:
          # Calculate the total time the door was open
          - alias: "Calculate final total time"
            variables:
              start_time: "{{ as_timestamp(trigger.from_state.last_changed) }}"
              end_time: "{{ now().timestamp() }}"
              total_minutes: "{{ ((end_time - start_time) / 60) | round(0) }}"
          
          - alias: "Send door closed notification"
            service: "{{ notification_service }}"
            data:
              title: "{{ resolution_title }}"
              message: >
                {{ resolution_message.replace('{door_name}', door_name).replace('{time}', total_minutes | string) }}
